<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="adminMapper">

   <resultMap type="Admin" id="sell_goodsResultSet">
       <id property="sellNum" column ="SELL_NUM"/>
      
      <result property ="gId"          column ="GID"/>
      <result property ="mId"          column ="MID"/>
      <result property="cateCd"          column="CATE_CD"/>
      <result property ="goodsTitle"       column ="GOODS_TITLE"/>
      <result property="goodsPrice"       column="GOODS_PRICE"/>
      <result property="goodsName" 		column="GOODS_NAME"/> 
      <result property="count"          column="COUNT"/>
      <result property ="goodsContent"    column ="GOODS_CONTENT"/>
      <result property ="filePath"       column="GOODS_FILE_PATH"/>
      <result property ="contentFilePath" column="GOODS_CONTENT_FILE_PATH"/>
      <result property ="sellDate"       column="SELL_DATE"/>
      <result property ="modifyDate"       column="MODIFY_DATE"/>
      <result property ="status"          column="STATUS"/>
      
      <result property ="userId" column="USER_ID"/>
      <result property ="rId" column="RID"/>
      <result property ="rContent" column="RCONTENT"/>
      <result property ="sellStart" column="SELL_START"/>
      <result property ="ref_filePath" column="REP_FILE_PATH"/>
      <result property ="createDate" column="CREATE_DATE"/>
   </resultMap>

   <resultMap id="goodsResultSet" type="Goods">
        <id property="gId"             column="GID"/>
        <result property="cateCd"       column="CATE_CD"/>
        <result property="goodsName"    column="GOODS_NAME"/> 
        <result property="goodsPrice"    column="GOODS_PRICE"/>
        <result property="count"       column="COUNT"/>
        <result property="goodsStatus"    column="GOODS_STATUS"/>
        <result property="soldout"       column="SOLDOUT"/>
        <result property="registerDate" column="REGISTER_DATE"/>
        <result property="modifyDate"    column="MODIFY_DATE"/>
        
        <result property="cateNm"       column="CATE_NM"/>
        <result property="lclCd"       column="LCL_CD"/>
        <result property="mclCd"       column="MCL_CD"/>
        <result property="sclCd"       column="SCL_CD"/>
   </resultMap>


   <resultMap id="CategoryResultSet" type="Category">
        <id property="cateCd"       column="CATE_CD"/>
        <result property="cateNm"    column="CATE_NM"/>
        <result property="lclCd"    column="LCL_CD"/>
        <result property="mclCd"    column="MCL_CD"/>
        <result property="sclCd"    column="SCL_CD"/>
        <result property="cateLvl"    column="CATE_LVL"/>
        <result property="useYn"    column="USE_YN"/>
        <result property="regDtm"    column="REG_DTM"/>
        <result property="modDtm"    column="MOD_DTM"/>

        <result property="lcateNm"    column="L_CATE_NM"/>
        <result property="mcateNm"    column="M_CATE_NM"/>
        <result property="scateNm"    column="S_CATE_NM"/>

   </resultMap>

	<!-- 상품등록  -->
   <insert id ="insertSellgoods" parameterType="Admin">
      INSERT INTO SELL_GOODS 
      VALUES(SELL_NUM.NEXTVAL, #{gId}, #{mId}, #{cateCd}, #{goodsTitle}, #{goodsContent}, #{filePath}, #{contentFilePath}, SYSDATE, SYSDATE, DEFAULT
      )
   </insert>
	
	<!-- shop상품조회 -->
   <select id ="selectshopgoods" resultMap="sell_goodsResultSet">
	    SELECT *
		FROM SELL_GOODSSELECTVIEW
		WHERE SELL_NUM=#{sellNum}
		AND STATUS='Y'
   </select>

	<!-- 리플조회 -->
    <select id ="selectreply" resultMap="sell_goodsResultSet">
	    SELECT *
		FROM SELL_REPLY SR
		JOIN SELL_GOODSSELECTVIEW SGV ON (SGV.SELL_NUM = SR.SELL_NUM)
		JOIN MEMBER M ON(M.MID = SR.MID)
		WHERE SR.SELL_NUM=#{sellNum}
		AND SR.STATUS = 'Y'
		ORDER BY RID DESC 
    </select>

   <!-- 해당글의 리플갯수  -->
    <select id="getReplylistCount" parameterType="_int" resultType="_int"> 	
  	 SELECT COUNT(*)
  	 FROM SELL_REPLY_AFTERVIEW
  	 WHERE STATUS='Y'
  	 AND SELL_NUM=#{sellNum}
  	
  </select>
   
   
   <select id="selectReplyList" resultMap="sell_goodsResultSet" parameterType="_int">
	SELECT *
	FROM SELL_REPLY_AFTERVIEW
	WHERE SELL_NUM=#{sellNum}
	AND STATUS = 'Y'
	ORDER BY RID ASC
  </select>



	<!-- 상품별 후기 평균 -->
	<select id ="starAvgCount" parameterType="_int" resultType="_double">
		SELECT ROUND(AVG(SELL_START),1)
		FROM SELL_REPLY_AFTERVIEW
		WHERE GID=#{gId}
	</select>


	<!-- 구매한 상품에서 후기작성 중복 체크 -->
	<select id="selectafterCheck" resultType="_int">
	  	SELECT COUNT(*)
		  FROM SELL_REPLY_AFTERVIEW
		 	WHERE MID = #{mId} 
		   AND GID = #{gId}
           AND STATUS = 'Y'
	</select>
  	
  	
  	
  	
  	
  	
<!--========================================= INSERT  =========================================-->	
	
	<!-- 동복 - 상품 등록 -->
	<insert id ="insertgoods" parameterType="Goods">
		INSERT INTO GOODS VALUES(
			SEQ_GID.NEXTVAL, #{cateCd}, #{goodsName}, #{goodsPrice}, #{count}, #{goodsStatus}, #{soldout}, SYSDATE, NULL 
		)
	</insert>
	

	
	<!-- 동복 - 카테고리 등록 -->
	<insert id ="insertCategory" parameterType="Category">
		INSERT INTO CATEGORY VALUES(
			#{cateCd}, #{cateNm}, #{lclCd}, #{mclCd}, #{sclCd}, '4', 'Y', SYSDATE, NULL 
		)
	</insert>	

<!--========================================= UPDATE  =========================================-->
  	<!-- 동복 - 상품판매 품절유무 수정-->
  	<update id = "updateAdminStatus" parameterType ="Admin">
		UPDATE SELL_GOODS
		<if test='status == "Y"'>
    		SET STATUS='N'
		</if>
		<if test='status == "N"'>
    		SET STATUS='Y'
		</if>		
		WHERE SELL_NUM=#{sellNum}
	</update>
  
  
  	<!-- 동복 - 상품 수정-->
  	<update id="Updategoods" parameterType="Goods">
  		UPDATE GOODS 
  		   SET	GOODS_NAME = #{goodsName},
				GOODS_PRICE = #{goodsPrice},
  		   		COUNT = #{count},
  		   		GOODS_STATUS = #{goodsStatus},
  		   		SOLDOUT = #{soldout},
  		   		MODIFY_DATE = SYSDATE
  		WHERE GID = #{gId}  
  	</update>
  	
  	<!-- 동복 - 상품 수정(카테고리 수정)-->
  	<update id="UpdateCategory" parameterType="Category">
   		UPDATE CATEGORY 
  		   SET CATE_NM = #{cateNm},
			   LCL_CD = #{lclCd},
  		   	   MCL_CD = #{mclCd},
  		   	   SCL_CD = #{sclCd},
  		   	   MOD_DTM = SYSDATE
  		 WHERE CATE_CD = #{cateCd}
  	</update>  	

  	<!-- 동복 - 상품판매 등록시 가격 과 수량을 변경했다면 상품테이블도 변경 (1:1 매핑임)-->
  	<update id="sellUpdategoods" parameterType="Goods">
  		UPDATE GOODS 
  		   SET GOODS_PRICE = #{goodsPrice},
  		   	   COUNT = #{count},
  		   	   MODIFY_DATE = SYSDATE
  		 WHERE GID = #{gId}  
  	</update>

  	<!-- 동복 : 판매상품 품절 처리시 상품과 판매가 1:1 이라 상품 상태도 N으로 변경-->
  	<update id="updateGoodsStatus" parameterType="Admin">
  		UPDATE GOODS
  		<if test='status == "Y"'>
    		SET GOODS_STATUS = 'N',
		</if>
		<if test='status == "N"'>
    		SET GOODS_STATUS = 'Y',
		</if>		
  		   	   MODIFY_DATE = SYSDATE
  		 WHERE GID = #{gId}
  	</update>

  	<!-- 동복 - 판매 상품 조회 내역 수정-->
  	<update id="UpdateSellGoods" parameterType="Admin">
  		UPDATE SELL_GOODS 
  		   SET	GOODS_TITLE = #{goodsTitle},
				GOODS_CONTENT = #{goodsContent},
  		   		GOODS_FILE_PATH = #{filePath},
  		   		GOODS_CONTENT_FILE_PATH = #{contentFilePath},
  		   		MODIFY_DATE = SYSDATE
  		WHERE SELL_NUM = #{sellNum}
  	</update>
  	
  	<!-- 동복 - 상품관리에서 수정시 판매중인 상품리스트에 대한 상태도 변경 -->
  	<update id = "updateSellGoodsStatus" parameterType ="Admin">
		UPDATE SELL_GOODS
		<if test='status == "Y"'>
    		SET STATUS='Y'
		</if>
		<if test='status == "N"'>
    		SET STATUS='N'
		</if>		
		WHERE GID = #{gId}
	</update>
  	
  	
<!--========================================= SELECT  =========================================-->


	<select id ="salesVolumePageCount" resultType="_int">
	SELECT COUNT(*)
	FROM(
			SELECT  G.GID,
			        G.CATE_CD,
			        G.GOODS_NAME,
			        G.GOODS_PRICE,
			        G.GOODS_STATUS,
			        G.SOLDOUT,
			        G.REGISTER_DATE,
			        G.MODIFY_DATE,
			        C.CATE_NM,
			        C.LCL_CD,
			        C.MCL_CD,
			        C.SCL_CD,
	                SUM(L.ORDER_COUNT)AS COUNT
			   FROM GOODS G
	          INNER JOIN ORDER_LIST L ON(G.GID = L.GID)
			  JOIN CATEGORY C ON(G.CATE_CD = C.CATE_CD)
	           GROUP BY G.GID,
			        G.CATE_CD,
			        G.GOODS_NAME,
			        G.GOODS_PRICE,
			        G.COUNT,
			        G.GOODS_STATUS,
			        G.SOLDOUT,
			        G.REGISTER_DATE,
			        G.MODIFY_DATE,
			        C.CATE_NM,
			        C.LCL_CD,
			        C.MCL_CD,
			        C.SCL_CD
			  ORDER BY COUNT DESC)
	</select>

	<!-- 동복 - 수정(품절처리된 상품도 List에 보여줌(추후에 재판매 가능하도록)) -->
	<select id ="selectList" resultMap="sell_goodsResultSet">
		
		<!-- SELECT *
        FROM(SELECT * 
        FROM SELL_GOODSSELECTVIEW 
        WHERE STATUS='Y')
        ORDER BY SELL_NUM DESC -->
        
		SELECT *
        FROM(SELECT * 
        FROM SELL_GOODSSELECTVIEW)
        ORDER BY SELL_NUM DESC        
        
		<!-- ORDER BY N_CREATE_DATE DESC -->
	</select>
	<!-- 동복 - 수정(품절처리된 상품도 List에 보여줌(추후에 재판매 가능하도록)) -->
	<select id ="selectListShop" resultMap="sell_goodsResultSet">
		
		SELECT *
        FROM(SELECT * 
        FROM SELL_GOODSSELECTVIEW 
        WHERE STATUS='Y')
        ORDER BY SELL_NUM DESC

	</select>

	<!-- 동복 - 판매량 많은 상품 조회 --> 	
	<select id="salesVolumeList" resultMap="goodsResultSet">
		SELECT  G.GID,
		        G.CATE_CD,
		        G.GOODS_NAME,
		        G.GOODS_PRICE,
		        G.GOODS_STATUS,
		        G.SOLDOUT,
		        G.REGISTER_DATE,
		        G.MODIFY_DATE,
		        C.CATE_NM,
		        C.LCL_CD,
		        C.MCL_CD,
		        C.SCL_CD,
                SUM(L.ORDER_COUNT)AS COUNT
		   FROM GOODS G
          INNER JOIN ORDER_LIST L ON(G.GID = L.GID)
		  JOIN CATEGORY C ON(G.CATE_CD = C.CATE_CD)
           GROUP BY G.GID,
		        G.CATE_CD,
		        G.GOODS_NAME,
		        G.GOODS_PRICE,
		        G.COUNT,
		        G.GOODS_STATUS,
		        G.SOLDOUT,
		        G.REGISTER_DATE,
		        G.MODIFY_DATE,
		        C.CATE_NM,
		        C.LCL_CD,
		        C.MCL_CD,
		        C.SCL_CD
		  ORDER BY COUNT DESC
	</select>
	
	
	<!-- 동복 - 상품 리스트 조회 --> 	
	<select id="goodsList" resultMap="goodsResultSet">
		SELECT  G.GID,
		        G.CATE_CD,
		        G.GOODS_NAME,
		        G.GOODS_PRICE,
		        G.COUNT,
		        G.GOODS_STATUS,
		        G.SOLDOUT,
		        G.REGISTER_DATE,
		        G.MODIFY_DATE,
		        C.CATE_NM,
		        C.LCL_CD,
		        C.MCL_CD,
		        C.SCL_CD
		  FROM GOODS G
		  JOIN CATEGORY C ON(G.CATE_CD = C.CATE_CD)
		  ORDER BY 1
	</select>
	
	<!-- 동복 - 판매중인 상품을 제외한 상품 리스트 조회 --> 	
	<select id="sellGoodsList" resultMap="goodsResultSet">
		SELECT  G.GID,
		        G.CATE_CD,
		        G.GOODS_NAME,
		        G.GOODS_PRICE,
		        G.COUNT,
		        G.GOODS_STATUS,
		        G.SOLDOUT,
		        G.REGISTER_DATE,
		        G.MODIFY_DATE,
		        C.CATE_NM,
		        C.LCL_CD,
		        C.MCL_CD,
		        C.SCL_CD
		  FROM GOODS G
		  JOIN CATEGORY C ON(G.CATE_CD = C.CATE_CD)
         WHERE G.GID NOT IN (SELECT GID FROM SELL_GOODS)
		  ORDER BY 1
	</select>	
	
	
	<!-- 동복 - 등록한 상품의 카테고리 코드 조회 (상품등록시 사용 시퀀스로 안함 : 상품등록후 카테고리도 등록해야되서 )--> 	
	<select id="categoryCDselect" resultMap="CategoryResultSet" parameterType="Goods">
		SELECT MAX(CATE_CD)+1 AS CATE_CD
		  FROM GOODS
	</select>
	
	<!-- 동복 - 상품 수정 리스트 조회-->
	<select id="goodsUpdateList" resultMap="goodsResultSet" parameterType="_int" >
	  	SELECT *
	  	  FROM GOODS
	  	 WHERE GID = #{gId}
	</select>
	
	<!-- 동복 - 상품판매 시 상품리스트 조회 -->
	<select id="selectGoodsValue" resultMap="goodsResultSet">
	  	SELECT * 
	  	  FROM GOODS
	  	 WHERE GOODS_NAME = #{goodsName} 
	</select>	
	
	<!-- 동복 - 카테고리 조회 -->
	<select id="selectCategoryList" resultMap="CategoryResultSet">
	 SELECT *
	  FROM CATEGORY 
	 WHERE CATE_LVL = '1'
	</select>	
	
	<!-- 동복 - 대 카테고리 조회 -->
	<select id="selectLCategoryList" resultMap="CategoryResultSet">
	 SELECT *
	  FROM CATEGORY 
	 WHERE LCL_CD = #{lclCd} 
	   AND CATE_LVL = '2'
	</select>
	
	<!-- 동복 - 중 카테고리 조회 -->
	<select id="selectMCategoryList" resultMap="CategoryResultSet" parameterType="Category">
	 SELECT *
	  FROM CATEGORY 
	 WHERE LCL_CD = #{lclCd}
	   AND MCL_CD = #{mclCd}
	   AND CATE_LVL = '3'
	</select>
	
	<!-- 동복 - 소 카테고리 조회 -->
	<select id="selectSCategoryList" resultMap="CategoryResultSet">
	 SELECT *
	  FROM CATEGORY 
	 WHERE LCL_CD = #{lclCd}
	   AND MCL_CD = #{mclCd}
	   AND SCL_CD = #{sclCd}
	   AND CATE_LVL = '4'
	</select>
	
	<!-- 동복 - 상품 등록 시 상품이름 중복 체크 -->
	<select id="checkGoodsNm" parameterType="string" resultType="_int">
		 SELECT COUNT(*)
		  FROM GOODS
         WHERE GOODS_NAME = #{goodsName}
	</select>
	
	<!-- 동복 - 상품 수정시 현재 해당 상품이 판매 중인지 조회 -->
	<select id="selectsellGoodsList" parameterType="string" resultType="_int">
		 SELECT COUNT(*)
		  FROM SELL_GOODS
         WHERE GID = #{gId}
	</select>
	
	
	<!-- 동복 - 상품 수정 카테고리 조회-->
	<select id="goodsUpdateClist" resultMap="CategoryResultSet" parameterType="_int" >
		SELECT *
		  FROM CATEGORY
		 WHERE CATE_LVL = 1
	</select>	
	
	<!-- 동복 - 상품 수정 (대)카테고리 조회-->
	<select id="goodsUpdateLlist" resultMap="CategoryResultSet" parameterType="_int" >
		SELECT *
		  FROM CATEGORY
		 WHERE CATE_LVL = 2
		   AND LCL_CD =(
						 SELECT LCL_CD
						   FROM GOODS G
						   JOIN CATEGORY C ON(G.CATE_CD = C.CATE_CD)
						  WHERE G.GID = #{gId}
		 				)
	</select>
	
	<!-- 동복 - 상품 수정 (중)카테고리 조회-->
	<select id="goodsUpdateMlist" resultMap="CategoryResultSet" parameterType="_int" >
		SELECT *
		  FROM CATEGORY
		 WHERE CATE_LVL = 3
		   AND MCL_CD =(
						 SELECT MCL_CD
						   FROM GOODS G
						   JOIN CATEGORY C ON(G.CATE_CD = C.CATE_CD)
						  WHERE G.GID = #{gId}
						)
	</select>	
	
	<!-- 동복 - 클릭한 상품의 카테고리 조회 -->
	<select id="goodsUpCategorylist" resultMap="CategoryResultSet" parameterType="_int" >
		SELECT L.CATE_CD AS LCL_CD, 
		       L.CATE_NM AS L_CATE_NM,
		       M.CATE_CD AS MCL_CD, 
		       M.CATE_NM AS M_CATE_NM,
		       S.CATE_CD AS SCL_CD, 
		       S.CATE_NM AS S_CATE_NM
		  FROM (
		        SELECT CATE_CD,CATE_NM
		          FROM CATEGORY
		         WHERE CATE_CD = (
		                        SELECT LCL_CD
		                         FROM GOODS G
		                         JOIN CATEGORY C ON(G.CATE_CD = C.CATE_CD)
		                         WHERE G.GID = #{gId}
		                         )
		        )L,
		        (
		        SELECT CATE_CD,CATE_NM
		          FROM CATEGORY
		         WHERE CATE_CD = (
		                        SELECT MCL_CD
		                         FROM GOODS G
		                         JOIN CATEGORY C ON(G.CATE_CD = C.CATE_CD)
		                         WHERE G.GID = #{gId}
		                         )
		         )M,
		         (
		        SELECT CATE_CD,CATE_NM
		          FROM CATEGORY
		         WHERE CATE_CD = (
		                        SELECT SCL_CD
		                         FROM GOODS G
		                         JOIN CATEGORY C ON(G.CATE_CD = C.CATE_CD)
		                         WHERE G.GID = #{gId}
		                         )
		         )S
	</select>
	
	<!-- 동복 - 판매 상품 조회 수정 페이지 -->
	<select id="sell_goodsDetailView" resultMap="sell_goodsResultSet">
		SELECT S.SELL_NUM
		      ,S.GID
		      ,S.CATE_CD
		      ,S.GOODS_TITLE
		      ,S.GOODS_CONTENT
		      ,S.GOODS_FILE_PATH
		      ,S.GOODS_CONTENT_FILE_PATH
		      ,S.SELL_DATE
		      ,S.MODIFY_DATE
		      ,S.STATUS
		      ,G.GOODS_NAME
		      ,G.GOODS_PRICE
		      ,G.COUNT
		  FROM SELL_GOODS S
		  JOIN GOODS G ON(S.GID = G.GID)
         WHERE SELL_NUM = #{sellNum}
	</select>
	
	<!-- 동복 - 상품관리 화면에서 조건 검색 -->
	<select id="checkTextSelectGoods" resultMap="goodsResultSet">
 		SELECT  G.GID,
	        G.CATE_CD,
	        G.GOODS_NAME,
	        G.GOODS_PRICE,
	        G.COUNT,
	        G.GOODS_STATUS,
	        G.SOLDOUT,
	        G.REGISTER_DATE,
	        G.MODIFY_DATE,
	        C.CATE_NM,
	        C.LCL_CD,
	        C.MCL_CD,
	        C.SCL_CD,
	        C.CATE_LVL
	  FROM GOODS G
	  JOIN CATEGORY C ON(G.CATE_CD = C.CATE_CD)
	<if test='whereNum == "1"'> <!-- 카테고리 들어오면 이거 1 -->
	 WHERE C.LCL_CD = #{lclCd}
		<if test="mclCd != ''">
		   AND C.MCL_CD = #{mclCd}
		</if>   
		<if test="sclCd != ''">
		   AND C.SCL_CD = #{sclCd}
		</if>
		<if test="goodsName != ''">
		   AND G.GOODS_NAME LIKE '%'||#{goodsName}||'%'
		</if>
		<if test="goodsStatus != ''">
		   AND G.GOODS_STATUS = #{goodsStatus}
		</if>
		<if test="soldout != ''">
		   AND G.SOLDOUT = #{soldout}
		</if>
	</if>

	<if test='whereNum == "2"'> <!-- 상태 들어오면 2 -->
	 WHERE GOODS_STATUS = #{goodsStatus}
	    <if test="soldout != ''">
	      AND SOLDOUT = #{soldout}
	    </if>
	    <if test="lclCd != ''">
	      AND C.LCL_CD = #{lclCd}
	    </if>
	    <if test="mclCd != ''">
	      AND C.MCL_CD = #{mclCd}
	    </if>
	    <if test="sclCd != ''">
	      AND C.SCL_CD = #{sclCd}
	    </if>
	    <if test="goodsName != ''">
	      AND G.GOODS_NAME LIKE '%'||#{goodsName}||'%'
	    </if>
	</if>

	<if test='whereNum == "3"'> <!-- 매진 구분 들어오면 3 -->
	 WHERE SOLDOUT = #{soldout}
		<if test="goodsStatus != ''">
		   AND GOODS_STATUS = #{goodsStatus}
		</if>   
		<if test="lclCd != ''">
		   AND C.LCL_CD = #{lclCd}
		</if>  
		<if test="mclCd != ''">
		   AND C.MCL_CD = #{mclCd}
		</if>  
		<if test="sclCd != ''">
		   AND C.SCL_CD = #{sclCd}
		</if>  
		<if test="goodsName != ''">
		   AND G.GOODS_NAME LIKE '%'||#{goodsName}||'%'
		</if>  
	</if>
	
	<if test='whereNum == "4"'> <!-- 상품명 들어오면 이거부터 4 -->
	 WHERE GOODS_NAME LIKE '%'||#{goodsName}||'%'
		<if test="goodsStatus != ''">
		   AND GOODS_STATUS = #{goodsStatus}
		</if> 
		<if test="soldout != ''">
		   AND SOLDOUT = #{soldout}
		</if> 
		<if test="lclCd != ''">
		   AND C.LCL_CD = #{lclCd}
		</if> 
		<if test="mclCd != ''">
		   AND C.MCL_CD = #{mclCd}
		</if> 
		<if test="sclCd != ''">
		   AND C.SCL_CD = #{sclCd} 
		</if> 
	</if>
 
 
	</select>
	
	<!-- 동복 - 상품관리 화면에서 조건 검색 -->
	<select id="checkTextSelectGoodsCount" resultType="_int">
 		SELECT  COUNT(*)
	  FROM GOODS G
	  JOIN CATEGORY C ON(G.CATE_CD = C.CATE_CD)
	<if test='whereNum == "1"'> <!-- 카테고리 들어오면 이거 1 -->
	 WHERE C.LCL_CD = #{lclCd}
		<if test="mclCd != ''">
		   AND C.MCL_CD = #{mclCd}
		</if>   
		<if test="sclCd != ''">
		   AND C.SCL_CD = #{sclCd}
		</if>
		<if test="goodsName != ''">
		   AND G.GOODS_NAME LIKE '%'||#{goodsName}||'%'
		</if>
		<if test="goodsStatus != ''">
		   AND G.GOODS_STATUS = #{goodsStatus}
		</if>
		<if test="soldout != ''">
		   AND G.SOLDOUT = #{soldout}
		</if>
	</if>

	<if test='whereNum == "2"'> <!-- 상태 들어오면 2 -->
	 WHERE GOODS_STATUS = #{goodsStatus}
	    <if test="soldout != ''">
	      AND SOLDOUT = #{soldout}
	    </if>
	    <if test="lclCd != ''">
	      AND C.LCL_CD = #{lclCd}
	    </if>
	    <if test="mclCd != ''">
	      AND C.MCL_CD = #{mclCd}
	    </if>
	    <if test="sclCd != ''">
	      AND C.SCL_CD = #{sclCd}
	    </if>
	    <if test="goodsName != ''">
	      AND G.GOODS_NAME LIKE '%'||#{goodsName}||'%'
	    </if>
	</if>

	<if test='whereNum == "3"'> <!-- 매진 구분 들어오면 3 -->
	 WHERE SOLDOUT = #{soldout}
		<if test="goodsStatus != ''">
		   AND GOODS_STATUS = #{goodsStatus}
		</if>   
		<if test="lclCd != ''">
		   AND C.LCL_CD = #{lclCd}
		</if>  
		<if test="mclCd != ''">
		   AND C.MCL_CD = #{mclCd}
		</if>  
		<if test="sclCd != ''">
		   AND C.SCL_CD = #{sclCd}
		</if>  
		<if test="goodsName != ''">
		   AND G.GOODS_NAME LIKE '%'||#{goodsName}||'%'
		</if>  
	</if>
	
	<if test='whereNum == "4"'> <!-- 상품명 들어오면 이거부터 4 -->
	 WHERE GOODS_NAME LIKE '%'||#{goodsName}||'%'
		<if test="goodsStatus != ''">
		   AND GOODS_STATUS = #{goodsStatus}
		</if> 
		<if test="soldout != ''">
		   AND SOLDOUT = #{soldout}
		</if> 
		<if test="lclCd != ''">
		   AND C.LCL_CD = #{lclCd}
		</if> 
		<if test="mclCd != ''">
		   AND C.MCL_CD = #{mclCd}
		</if> 
		<if test="sclCd != ''">
		   AND C.SCL_CD = #{sclCd} 
		</if> 
	</if>
 
 
	</select>	
	
	
	
	
	<!-- 동복 - 카테고리 조회 -->
	<select id="detailLCategoryList" resultMap="CategoryResultSet">
	 SELECT *
	  FROM CATEGORY 
	 WHERE CATE_LVL = '2'
	</select>	
	<!-- 동복 - 카테고리 조회 -->
	<select id="detailCategoryList" resultMap="CategoryResultSet">
	 SELECT *
	  FROM CATEGORY 
	 WHERE CATE_LVL = '3'
	</select>	
	
	
	
	
</mapper>
