<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="orderMapper">
	<resultMap type="Order" id="orderResultSet">
		<id property="oId" column="OID"/>
		<result property="gId" column="GID"/>
		<result property="gName" column="GOODS_NAME"/>
		<result property="gPrice" column="GOODS_PRICE"/>
		<result property="mId" column="MID"/>
		<result property="userName" column="USER_NAME"/>
		<result property="phone" column="PHONE"/>
		<result property="address" column="ADDRESS"/>
		<result property="orderNum" column="ORDER_NUM"/>
		<result property="orderCount" column="ORDER_COUNT"/>
		<result property="orderDate" column="ORDER_DATE"/>
		<result property="orderStatus" column="ORDER_STATUS"/>
		<result property="rowCount" column="ROWCOUNT"/>
		<result property="usedPoint" column="USERD_POINT"/>
		<result property="orderPrice" column="ORDER_PRICE"/>
		
		<result property="goodsTitle" 	column="GOODS_TITLE"/>
		<result property="filePath" 	column="GOODS_FILE_PATH"/>
		
		<!-- 동복 : 결제 INSERT문을 위해 생성 -->
		<result property="dName" 		column="D_NAME"/>
		<result property="dAddress" 	column="D_ADDRESS"/>
		<result property="dPhone" 		column="D_PHONE"/>
		
	</resultMap>

	<select id="selectOrder" resultMap="orderResultSet">
        SELECT OID, O.GID GID,GOODS_NAME, GOODS_PRICE, O.MID MID, O.ORDER_NUM ORDER_NUM, ORDER_COUNT, ORDER_DATE, ORDER_STATUS, ROWCOUNT, GOODS_TITLE, GOODS_FILE_PATH
		FROM ORDER_LIST O 
		JOIN (SELECT ORDER_NUM, COUNT(*) ROWCOUNT
		     FROM ORDER_LIST
		     GROUP BY ORDER_NUM) R ON (O.ORDER_NUM = R.ORDER_NUM)
		JOIN GOODS G ON (O.GID=G.GID)
        JOIN SELL_GOODS S ON (S.GID = G.GID)
		WHERE O.MID= #{mId}
		ORDER BY O.ORDER_NUM DESC
	</select>
	
	<select id="beforeCount" resultType="_int">
		SELECT COUNT(*)
		FROM ORDER_LIST
		WHERE MID=#{mId} AND ORDER_STATUS='B'
	</select>
	<select id="deliverCount" resultType="_int">
		SELECT COUNT(*)
		FROM ORDER_LIST
		WHERE MID=#{mId} AND ORDER_STATUS='I'
	</select>
	<select id="completeCount" resultType="_int">
		SELECT COUNT(*)
		FROM ORDER_LIST
		WHERE MID=#{mId} AND ORDER_STATUS='C'
	</select>
	<select id="cancelCount" resultType="_int">
		SELECT COUNT(*)
		FROM ORDER_LIST
		WHERE MID=#{mId} AND ORDER_STATUS='X'
	</select>
	<select id="orderDetail" resultMap="orderResultSet">
		SELECT O.OID, O.ORDER_NUM ORDER_NUM, O.ORDER_COUNT ORDER_COUNT, O.ORDER_DATE ORDER_DATE,O.ORDER_STATUS ORDER_STATUS, M.USER_NAME USER_NAME, M.PHONE PHONE, M.ADDRESS ADDRESS,G.GID GID, G.GOODS_NAME GOODS_NAME, G.GOODS_PRICE GOODS_PRICE, P.USED_POINT USED_POINT, P.ORDER_PRICE ORDER_PRICE
		FROM ORDER_LIST O, MEMBER M, GOODS G, PAYMENT P
		WHERE M.MID = O.MID AND G.GID=O.GID AND P.ORDER_NUM=O.ORDER_NUM AND O.ORDER_NUM=#{orderNum}
	</select>
	<update id="orderCancel" parameterType="Order">
		UPDATE ORD	<select id="getOrderListCount" resultType="_int">
		SELECT COUNT(*)
		FROM ORDER_LIST
		WHERE MID=#{mId}
	</select>
	<select id="getOrderSearch" resultMap="orderResultSet">
		SELECT OID, O.GID GID,GOODS_NAME, GOODS_PRICE, O.MID MID, O.ORDER_NUM ORDER_NUM, ORDER_COUNT, ORDER_DATE, ORDER_STATUS, ROWCOUNT,GOODS_TITLE, GOODS_FILE_PATH
		FROM ORDER_LIST O 
		JOIN (SELECT ORDER_NUM, COUNT(*) ROWCOUNT
		     FROM ORDER_LIST
		     GROUP BY ORDER_NUM) R ON (O.ORDER_NUM = R.ORDER_NUM)
		JOIN GOODS G ON (O.GID=G.GID)
        JOIN SELL_GOODS S ON (S.GID = G.GID)
		WHERE O.MID= #{mid} AND ORDER_DATE BETWEEN #{date1} AND  #{date2}
		ORDER BY O.ORDER_NUM DESC
	</select>
		<select id="getOrderSearchCount" resultType="_int">
		SELECT COUNT(*)
		FROM ORDER_LIST
		WHERE MID= #{mid} AND ORDER_DATE BETWEEN #{date1} AND #{date2}
	</select>
_LIST
		SET ORDER_STATUS='X'
		WHERE OID=#{number}
	</update>
	<select id="getOrderListCount" resultType="_int">
		SELECT COUNT(*)
		FROM ORDER_LIST
		WHERE MID=#{mId}
	</select>
	<select id="getOrderSearch" resultMap="orderResultSet">
		SELECT OID, O.GID GID,GOODS_NAME, GOODS_PRICE, O.MID MID, O.ORDER_NUM ORDER_NUM, ORDER_COUNT, ORDER_DATE, ORDER_STATUS, ROWCOUNT,GOODS_TITLE, GOODS_FILE_PATH
		FROM ORDER_LIST O 
		JOIN (SELECT ORDER_NUM, COUNT(*) ROWCOUNT
		     FROM ORDER_LIST
		     GROUP BY ORDER_NUM) R ON (O.ORDER_NUM = R.ORDER_NUM)
		JOIN GOODS G ON (O.GID=G.GID)
        JOIN SELL_GOODS S ON (S.GID = G.GID)
		WHERE O.MID= #{mid} AND ORDER_DATE BETWEEN #{date1} AND  #{date2}
		ORDER BY O.ORDER_NUM DESC
	</select>
		<select id="getOrderSearchCount" resultType="_int">
		SELECT COUNT(*)
		FROM ORDER_LIST
		WHERE MID= #{mid} AND ORDER_DATE BETWEEN #{date1} AND #{date2}
	</select>

  <!--========================================= INSERT  =========================================-->	
	
	<!-- 동복 - 결제 완료시 주문 테이블 insert -->
	<insert id ="insertPaymentList" parameterType="Order">
		INSERT INTO ORDER_LIST VALUES(
			SEQ_OID.NEXTVAL, #{gId}, #{mId}, CONCAT(TO_CHAR(SYSDATE,'YYYYMMDD'), TO_CHAR(SEQ_OID.nextval, 'FM0000')), #{orderCount}, SYSDATE, #{orderStatus} 
		)
	</insert>
   
	<!-- 동복 - 결제 완료시 결제 테이블 insert -->
	<insert id ="insertPayment" parameterType="Order">
		INSERT INTO PAYMENT VALUES(
			<!-- #{orderNum}, #{orderPrice}, #{usedPoint} -->
			(SELECT ORDER_NUM FROM( SELECT * FROM ORDER_LIST ORDER BY 1 DESC) WHERE ROWNUM = 1), #{orderPrice}, #{usedPoint}
			
		)
	</insert>   
   
 	<!-- 동복 - 결제 완료시 받는이 테이블 insert -->
	<insert id ="insertPaymentDinfo" parameterType="Order">
		INSERT INTO D_INFO VALUES(
			<!-- SEQ_DID.NEXTVAL, #{orderNum}, #{dName}, #{dAddress}, #{dPhone} -->
			SEQ_DID.NEXTVAL, (SELECT ORDER_NUM FROM( SELECT * FROM ORDER_LIST ORDER BY 1 DESC) WHERE ROWNUM = 1), #{dName}, #{dAddress}, #{dPhone}
		)
	</insert>    

	<!--========================================= SELECT  =========================================-->
	<!-- 결제한 상품의 orderNum 주문번호를 조회해서  PAYMENT,D_INFO 넣기위해 
	<select id="getOrderListCount" resultType="_int">
		SELECT COUNT(*)
		FROM ORDER_LIST
		WHERE MID=#{mId}
	</select>-->

	<!--========================================= UPDATE  =========================================-->
	<!-- 가용 포인트 사용시  포인트 테이블 UPDATE (POINT 테이블 사용안함. 결제시 총금액에 1% 적립)-->
	<update id="updateMemberPoint"  parameterType="Order">
   		UPDATE MEMBER
   		<if test="usedPoint == '0'">
			SET POINT = POINT+(#{orderPrice}*0.01)
		</if>
		<if test="usedPoint != '0'">
			SET POINT = (POINT+(#{orderPrice}*0.01))-#{usedPoint}
		</if>
		WHERE MID = #{mId}
	</update>

</mapper>
